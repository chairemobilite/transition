{
    "FetchNewData": "Fetch data updated by other users",
    "transitNode": {
        "Node": "Stop node",
        "List": "Stop nodes",
        "Nodes": "Stop nodes",
        "Name": "Name",
        "Code": "Code",
        "Description": "Description",
        "InternalId": "Internal ID",
        "Longitude": "Longitude",
        "Latitude": "Latitude",
        "Color": "Color",
        "Edit": "Stop node",
        "Delete": "Delete node",
        "ConfirmDelete": "Do you confirm deletion of this stop node? It will be deleted only if no path passes through it.",
        "ImportFromGeojson": "Import stop nodes (GEOJSON)",
        "New": "New stop node",
        "Id": "ID",
        "Uuid": "UUID",
        "true": "Yes",
        "false": "No",
        "ShowNodes": "Show nodes",
        "HideNodes": "Hide nodes",
        "CanBeUsedAsTerminal": "Can be used as terminal",
        "RoutingRadiusMeters": "Radius used for routing (meters)",
        "DwellTime": "Dwell time",
        "DefaultDwellTimeSeconds": "Default dwell time (seconds)",
        "MinDwellTimeSeconds": "Minimum dwell time (seconds)",
        "Weight": "Weight",
        "RelativeWeight": "Relative weight",
        "SaveToCache": "Archive nodes",
        "SaveNodeToCache": "Archive node",
        "LoadNodeFromCache": "Load node archive",
        "SaveAllAndUpdateTransferableNodes": "Update transferable nodes",
        "UpdateNodesOdTripsWeights": "Update OD weights around nodes",
        "UpdateOdTripsAccessibleNodes": "Update accessible nodes around OD trips",
        "UpdateNodesWalkingAccessibilityMap": "Update nodes walking accessibility map",
        "GetNodesWalkingAccessibilityMapFromCache": "Get nodes walking accessibility map from cache",
        "NodeRadiusExampleDistance": "The distance around the node through which a path can pass and be considered as passing by this node.",
        "AssociatedPaths": "Associated paths",
        "errors": {
            "GeographyIsRequired": "Node location on map is required.",
            "NameIsRequired": "Node name is required.",
            "RoutingRadiusMetersIsInvalid": "The radius must be an integer between 5 and 200.",
            "DefaultDwellTimeSecondsIsInvalid": "Default dwell time is invalid",
            "MinDwellTimeSecondsIsInvalid": "Minimum dwell time is invalid",
            "ImportWrongOrMissingId": "ID is missing or not valid for at least on stop node.",
            "GeojsonIsInvalid": "Stop node geojson data is invalid."
        },
        "MultipleDelete": "Delete nodes",
        "ConfirmMultipleDelete": "Do you confirm deletion of those stop nodes? Only the nodes through which no path passes will be deleted.",
        "deleteSelectedNodes": "Delete unused selected nodes",
        "deleteSelectedPolygon":"Cancel selection",
        "editSelectedNodes":"Edit selected nodes",
        "editFrozenSelectedNodesWarning":"only unfrozen nodes will be saved"
    },
    "transitAgency": {
        "List": "Agencies",
        "Agencies": "Agencies",
        "AgenciesAndLines": "Agencies and lines",
        "Agency": "Agency",
        "InternalId": "Internal ID",
        "Name": "Name",
        "Acronym": "Acronym",
        "Uuid": "UUID",
        "Url": "Website URL",
        "Timezone": "Timezone",
        "Color": "Color",
        "Description": "Description",
        "New": "New agency",
        "Edit": "Agency",
        "Delete": "Delete agency",
        "DuplicateAgency": "Duplicate agency",
        "ConfirmDelete": "Do you confirm deletion of this agency? Agency's lines, paths, garages and units will also be deleted.",
        "ImportFromJson": "Import agencies (JSON)",
        "nLine": "{{n}} line",
        "nLines": "{{n}} lines",
        "nUnit": "{{n}} unit",
        "nUnits": "{{n}} units",
        "nGarage": "{{n}} garage",
        "nGarages": "{{n}} garages",
        "errors": {
            "AcronymIsRequired": "Acronym is required",
            "AcronymMustBeUnique": "Acronym must be unique (another agency has this acronym)"
        },
        "SaveToCache": "Archive agencies"
    },
    "transitScenario": {
        "List": "Scenarios",
        "Scenarios": "Scenarios",
        "Scenario": "Scenario",
        "Services": "Services",
        "OnlyAgencies": "Exclusively included agencies (all included if empty)",
        "OnlyLines": "Exclusively included lines (all included if empty)",
        "OnlyNodes": "Exclusively included nodes (all included if empty)",
        "OnlyModes": "Exclusively included modes (all included if empty)",
        "ExceptAgencies": "Excluded agencies",
        "ExceptLines": "Excluded lines",
        "ExceptNodes": "Excluded nodes",
        "ExceptModes": "Excluded modes",
        "Service": "Service",
        "Name": "Name",
        "Uuid": "UUID",
        "Color": "Color",
        "Description": "Description",
        "New": "New scenario",
        "Edit": "Scenario",
        "Delete": "Delete scenario",
        "ConfirmDelete": "Do you confirm deletion of this scenario?",
        "DuplicateScenario": "Duplicate scenario",
        "ImportFromJson": "Import scenarios (JSON)",
        "errors": {
            "NameIsRequired": "Name is required",
            "ServicesAreRequired": "At least one service must be selected"
        },
        "SaveToCache": "Archive scenarios"
    },
    "transitService": {
        "List": "Services",
        "Services": "Services",
        "Service": "Service",
        "Name": "Name",
        "Uuid": "UUID",
        "DayRange": "Service days",
        "ValidityPeriod": "Validity period",
        "Color": "Color",
        "Description": "Description",
        "New": "New service",
        "Edit": "Service",
        "Delete": "Delete service",
        "DeleteUnused": "Delete unused services",
        "Merge": "Merge services",
        "MergeName": "Merge: ",
        "ConfirmMerge": "Do you confirm merging the selected services? Timetables associated with those services will now be part of the new service and merged services will be deleted.",
        "CannotMerge": "Failed to merge services for some lines. You'll have to edit them manually. Previous services will be kept: ",
        "ConfirmDelete": "Do you confirm deletion of this service? There are no schedules currently associated with it.",
        "ConfirmDeleteWithSchedule": "Do you confirm deletion of this service? Schedules associated with this service will also be deleted. This operation cannot be undone.",
        "ConfirmDeleteUnused": "Do you confirm deletion of all unused services? The unused services are those with no schedules associated with it.",
        "ImportFromJson": "Import services (JSON)",
        "DuplicateService": "Duplicate service",
        "oneLine": "1 line",
        "nLines": "{{n}} lines",
        "ShowServiceFilter": "Filter services",
        "HideServiceFilter": "Hide filters",
        "ValidityDate": "Validity date",
        "FilterValidityPeriod": "Filter by validity period",
        "StringOrRegex": "Name (or regular expression)",
        "errors": {
            "NameIsRequired": "Name is required.",
            "NameAlreadyExists": "A service with this name already exists",
            "StartDateIsRequired": "Validity period start date is required.",
            "EndDateIsRequired": "Validity period end date is required."
        },
        "SaveToCache": "Archive services"
    },
    "transitSchedule": {
        "Schedules": "Timetables",
        "List": "Timetables",
        "Delete": "Delete timetable",
        "ConfirmDelete": "Do you confirm deletion of this timetable?",
        "Schedule": "Timetable",
        "NewSchedule": "New timetable",
        "SaveSchedule": "Save timetable",
        "CloseSchedulesWindow": "Close the timetable window",
        "errors": {
            "ServiceIsRequired": "Service is required",
            "PeriodsGroupIsRequired": "Periods group is required",
            "ChooseIntervalOrNumberOfUnits": "Specify the interval in minutes or the number of units but not both (incompatible)",
            "NoServiceInServiceCollection": "You need to create at least one service to be able to generate timetables"
        },
        "OutboundPath": "Outbound path",
        "InboundPath": "Inbound path",
        "IntervalMinutes": "Interval (min.)",
        "IntervalSeconds": "Interval (sec.)",
        "NumberOfUnits": "Number of units (vehicles)",
        "requiredUnits": "units required",
        "CalculatedInterval": "Calculated period",
        "CustomStartAt": "First trip start time (HH:MM)",
        "GenerateSchedule": "Generate timetable",
        "RemoveSchedule": "Empty timetable",
        "Service": "Service",
        "AllowSecondsBasedSchedules": "Allow second-based timetables",
        "true": "Yes",
        "false": "No",
        "Period": "Period",
        "Periods": "Periods",
        "PeriodsGroup": "Periods group",
        "PeriodsGroups": "Periods groups",
        "nTrip": "{{n}} trip",
        "nTrips": "{{n}} trips"
    },
    "transitUnit": {
        "List": "Units",
        "Unit": "Unit",
        "Mode": "Mode",
        "Model": "Model",
        "Agency": "Agency",
        "Line": "Line",
        "GarageId": "Garage ID",
        "NumberOfDoors": "Nomber of doors",
        "NumberOfVehicles": "Number of vehicles",
        "CapacitySeated": "Capacity seated",
        "CapacityStanding": "Capacity standing",
        "Uuid": "UUID",
        "InternalId": "Internal ID",
        "Description": "Description",
        "New": "New unit",
        "Edit": "Unit",
        "Delete": "Delete unit",
        "ConfirmDelete": "Do you confirm deletion of this unit?",
        "ImportFromJson": "Import units (JSON)",
        "errors": {
            "NameIsRequired": "Name is required"
        },
        "SaveToCache": "Archive units"
    },
    "transitGarage": {
        "List": "Garages",
        "Unit": "Garage",
        "Name": "Name",
        "Uuid": "UUID",
        "Color": "Color",
        "InternalId": "Internal ID",
        "Description": "Description",
        "New": "New garage",
        "Edit": "Garage",
        "Delete": "Delete garage",
        "ConfirmDelete": "Do you confirm deletion of this garage?",
        "ImportFromGeojson": "Import agencies (GEOJSON)",
        "errors": {
            "NameIsRequired": "Name is required"
        },
        "SaveToCache": "Archive garages"
    },
    "transitLine": {
        "Line": "Line",
        "line": "line",
        "Lines": "Lines",
        "lines": "lines",
        "List": "Lines",
        "Agency": "Agency",
        "Shortname": "Number",
        "Longname": "Name",
        "Description": "Description",
        "InternalId": "Internal ID",
        "Mode": "Mode",
        "Color": "Color",
        "Edit": "Line",
        "Delete": "Delete line",
        "ConfirmDelete": "Do you confirm deletion of this line? Line's paths and timetables will also be deleted.",
        "ImportFromJson": "Import lines (JSON)",
        "New": "New line",
        "Id": "ID",
        "Uuid": "UUID",
        "true": "Yes",
        "false": "No",
        "DuplicateLine": "Duplicate line",
        "IsAutonomous": "Autonomous vehicles (no driver)",
        "AllowSameLineTransfers": "Allow transferring to the same line",
        "errors": {
            "ShortnameIsRequired": "Line number is required.",
            "ShortnameOrLongnameIsRequired": "Either line number or name must be specified, potentially both.",
            "ModeIsRequired": "Line mode is required."
        },
        "Category": "Right-of-way category (ROW)",
        "categories": {
            "A": "ROW A",
            "B": "ROW B",
            "C+": "ROW C enhanced",
            "C": "ROW C",
            "B_C": "ROW B and C",
            "non_applicable": "N/A"
        },
        "categoriesDescription": {
            "A": "Fully controlled separated track/lanes used exclusively by transit vehicles, priority at all time",
            "B": "Separated track/lanes with physical barrier (fence, wall, median or step), priority at every shared intersection",
            "C+": "On-street with mixed traffic, without physical barrier, with reserved lanes and/or priority at intersections",
            "C": "On-street with mixed traffic, without reserved lanes and with limited or no priority at intersections",
            "B_C": "Mix of ROW B and C",
            "non_applicable": "Non applicable"
        },
        "nPath": "{{n}} path",
        "nPaths": "{{n}} paths",
        "nService": "{{n}} service",
        "nServices": "{{n}} services",
        "NewTransitLine": "New line",
        "NewTransitAgency": "New agency",
        "NewTransitPath": "New path",
        "SaveToCache": "Archive lines",
        "SaveLineToCache": "Archive line",
        "LoadLineFromCache": "Load line archive",
        "modes": {
            "Modes": "Modes",
            "Mode": "Mode",
            "misc": "Other",
            "bus": "Bus",
            "trolleybus": "Trolleybus",
            "localBus": "local bus",
            "expressBus": "Express bus",
            "regionalBus": "Regional bus",
            "brt": "Bus Rapid Transit/BRT",
            "autonomousBus": "Autonomous bus",
            "rail": "Rail",
            "regionalRail": "Regional rail",
            "suburbanRail": "Commuter rail",
            "interRegionalRail": "Inter-regional/national rail",
            "longDistanceRail": "Long distance/international rail",
            "highSpeedRail": "High speed train",
            "urbanRail": "Urban rail",
            "metro": "Metro/Subway/Aerial metro",
            "monorail": "Monorail",
            "tram": "Tram",
            "tramTrain": "Tram-Train",
            "lrt": "Light Rail Transit/LRT",
            "streetcar": "Streetcar",
            "coach": "Coach",
            "commuterCoach": "Commuter coach",
            "regionalCoach": "Regional coach",
            "nationalCoach": "Inter-regional/national coach",
            "internationalCoach": "Long distance/international coach",
            "water": "Ferry/Boat",
            "gondola": "Gondola/Aerial tram",
            "funicular": "Funicular",
            "taxi": "Shared taxibus/Collective taxi",
            "autonomousTaxi": "Autonomous taxi",
            "other": "Other",
            "cableCar": "Cable-car",
            "horse": "Horse-carriage",
            "transferable": "Transfer path (walking and/or cycling)"
        }
    },
    "transitStation": {
        "Station": "Station",
        "List": "Stations",
        "Stations": "Stations",
        "Name": "Name",
        "Code": "Code",
        "Color": "Color",
        "Description": "Description",
        "InternalId": "Internal ID",
        "Edit": "Station",
        "Delete": "Delete station",
        "ConfirmDelete": "Do you confirm deletion of this station?",
        "ImportFromGeojson": "Import stations (GEOJSON)",
        "New": "New station",
        "Id": "ID",
        "Uuid": "UUID",
        "true": "Yes",
        "false": "No",
        "errors": {
            "NameIsRequired": "Station name is required."
        }
    },
    "transitPath": {
        "Path": "Path",
        "path": "path",
        "List": "Paths",
        "Paths": "Paths",
        "paths": "paths",
        "New": "New path",
        "Edit": "Path",
        "Delete": "Delete path",
        "ConfirmDelete": "Do you confirm deletion of this path? Path's timetables will be disabled.",
        "ImportFromGeojson": "Import paths (GEOJSON)",
        "Name": "Name",
        "Description": "Description",
        "Direction": "Direction",
        "RoutingEngine": "Routing engine",
        "DefaultRoutingEngine": "Default routing engine",
        "CustomLayover": "Custom layover time (minutes)",
        "ShowPaths": "Show paths",
        "HidePaths": "Hide paths",
        "true": "Yes",
        "false": "No",
        "Generate": "Generate path",
        "SuggestNode": "Suggest a stop node",
        "MinDistanceBetweenTerminalsKm": "Min. distance between terminals (km)",
        "AvgInterNodesDistanceMeters": "Average inter-stops distance (m)",
        "MedianInterNodesDistanceMeters": "Median inter-stops distance (m)",
        "MaxTemporalTortuosity": "Max temporal tortuosity",
        "MaxTemporalTortuosityInfo": "Travel time with stops / travel time with fastest route between terminals",
        "KeepExistingTerminals": "Keep existing terminals",
        "TemporalTortuosity": "Temporal tortuosity",
        "TemporalTortuosityWithoutDwellTimes": "Temporal tortuosity without dwell times",
        "SpatialTortuosity": "Spatial tortuosity",
        "EuclidianTortuosity": "Euclidian tortuosity",
        "TotalODWeight": "Total OD weight",
        "AverageRelativeODWeight": "Average OD weight per node",
        "routingEngines": {
            "engine": "Routing",
            "engineCustom": "Customized routing",
            "direct": "As the crow flies",
            "manual": "Click on map"
        },
        "TemporaryManualRouting": "Temporary activate click on map mode",
        "RoutingMode": "Routing mode",
        "DefaultRoutingMode": "Default routing mode",
        "routingModes": {
            "driving": "Car driving",
            "driving_congestion": "Car driving with traffic",
            "cycling": "Cycling",
            "walking": "Walking",
            "bus": "Bus",
            "bus_urban": "Urban bus",
            "bus_suburb": "Suburb bus",
            "bus_congestion": "Bus with traffic",
            "tram": "LRT/Tram",
            "rail": "Rail/Train",
            "metro": "Metro/Subway/RRT",
            "monorail": "Monorail",
            "tramTrain": "Tram-Train",
            "tram_train": "Tram-Train",
            "high_speed_rail": "High speed train",
            "cableCar": "Cable car",
            "cable_car": "Cable car",
            "horse": "Horses",
            "transit": "Transit"
        },
        "Acceleration": "Acceleration [m/s²]",
        "Deceleration": "Deceleration [m/s²]",
        "DefaultAcceleration": "Default acceleration [m/s²]",
        "DefaultDeceleration": "Default deceleration [m/s²]",
        "RunningSpeedKmH": "Cruising speed [km/h]",
        "DefaultRunningSpeedKmH": "Default cruising speed [km/h]",
        "DefaultDwellTimeSeconds": "Default dwell time at nodes [sec.]",
        "MinDwellTimeSeconds": "Minimum dwell time at nodes [sec.]",
        "MinMatchingTimestamp": "Minimum map matching routing timestamp interval (in seconds), default to 500",
        "MinMatchingTimestampHelp": "This is the timestamp interval to use between each waypoints while doing the map matching to route the path. Smaller values (less than 500) will reduce unexpected detours but may fail to route on long segments between stop nodes in the path (more waypoints would then be needed). Higher values (more than 500) will allow the map matching to successfully route more often, but it may also add unexpected detours.",
        "IncreaseRoutingRadiiToIncludeExistingPathShape": "Adapt nodes radii to fit current shape",
        "IncreaseRoutingRadiiToIncludeExistingPathShapeHelp": "Increase path nodes routing radii if the path shape is too far from some nodes (max 200m). Nodes routing radii will be ignored.",
        "Uuid": "UUID",
        "Line": "Line",
        "InternalId": "Internal ID",
        "nNode": "{{n}} stop",
        "nNodes": "{{n}} stops",
        "NewTransitPath": "New path",
        "SaveToCache": "Archive paths",
        "CreateReversedPath": "Generate reversed path",
        "DuplicatePath": "Duplicate path",
        "TotalDistance": "Total distance",
        "TotalLength": "Total length",
        "NodesCount": "Number of stops",
        "StartTerminal": "Departure terminal",
        "EndTerminal": "Arrival terminal",
        "TravelTimes": "Travel times",
        "IncludingDwellTimes": "With dwell times",
        "ExcludingDwellTimes": "Without dwell times",
        "IncludingDwellTimesAndLayover": "With dwell times and layover time",
        "LayoverTime": "Layover time",
        "Speeds": "Speeds",
        "OperatingSpeed": "Operating speed",
        "MinInterstopDistance": "Minimum interstop distance",
        "MaxInterstopDistance": "Maximum interstop distance",
        "AverageInterstopDistance": "Average interstop distance",
        "MedianInterstopDistance": "Median interstop distance",
        "SchedulesAffected": "Les horaires sont affectés",
        "PathChangeWillAffectSchedulesWhatDoYouWantToDo": "Changes to this path will affect associated timetables. What do you want to do?",
        "CancelPathChanges": "Cancel changes",
        "IgnorePathChangesOnSchedule": "Save changes, but keep old timetables",
        "UpdateSchedules": "Automatically update timetables",
        "ClickOnTransitNodeToStart": "Select a transit node to start the path",
        "PathEditMapDoc": "Click on node: Add the node at the end of the path<br/>Click on the map: Add a waypoint at the end<br/>Shift-click on node: Add a node at the beginning of the path<br/>Alt-click on node: Remove the node<br />m: Toggle manual mode for path calculation<br />Clic on the line + drag waypoint & drop on node: Add node in the middle of a path",
        "ShowPathEditHelp": "Show path edit help",
        "HidePathEditHelp": "Hide path edit help",
        "warningFromGtfs": "Warning! This transit path was imported from a GTFS. Recomputing its path could change the geography and timings.",

        "directions": {
            "loop": "Loop",
            "outbound": "Outbound",
            "inbound": "Inbound",
            "other": "Other"
        },
        "errors": {
            "NeedAtLeast2NodesOrStops": "Please add at least two nodes or stops to the path.",
            "DirectionIsRequired": "Direction is required.",
            "RoutingFailed": "Could not calcualte routing. Please make sure the path nodes/stops are near routable roads/tracks and that waypoints are valid and in the right order and that the routing engine and mode are correctly set.",
            "MissingGeometry": "Shape could not be generated (geometry is missing). Please verify waypoints and nodes/stops sequence.",
            "RoutingModeNotAvailableOnServer": "This path was made with a routing mode that is unavailable on this server. Updating it may cause the geography to change. Consult your server administrator for more information.",
            "RoutingEngineIsRequired": "Routing engine is required.",
            "RoutingModeIsRequired": "Routing mode is required.",
            "DefaultRunningSpeedIsRequiredForManualAndEngineCustomRoutingEngines": "Cruising speed is required for custom or manual routing.",
            "DefaultRunningSpeedIsInvalid": "Cruising speed is invalid.",
            "DefaultRunningSpeedIsTooHigh": "Cruising speed is too high for this mode.",
            "DefaultRunningSpeedIsTooLow": "Cruising speed is too low for this mode.",
            "MinDwellTimeIsInvalid": "Minimum dwell time is invalid or too high (max 600 sec.)",
            "DefaultDwellTimeIsInvalid": "Default dwell time is invalid or too high (max 600 sec.)",
            "DefaultAccelerationIsRequired": "Acceleration is required.",
            "DefaultAccelerationIsInvalid": "Acceleration is invalid.",
            "DefaultAccelerationIsTooLow": "Acceleration is too low.",
            "DefaultAccelerationIsTooHigh": "Acceleration is too high (uncomfortable).",
            "DefaultDecelerationIsRequired": "Deceleration is required.",
            "DefaultDecelerationIsInvalid": "Deceleration is invalid.",
            "DefaultDecelerationIsTooLow": "Deceleration is too low.",
            "DefaultDecelerationIsTooHigh": "Deceleration is too high (uncomfortable)."
        }
    },
    "transitRouting": {
        "Routing": "Routing",
        "BatchRoutingCsv": "Batch routing (CSV)",
        "BatchAccessibilityMapCsv": "Batch accessibility maps (CSV)",
        "CpuCount": "Number of parallel calculations",
        "DepartureTime": "Departure time",
        "ArrivalTime": "Arrival time",
        "StartTime": "Start [HH:MM]",
        "EndTime": "End [HH:MM]",
        "OdTripsRouting": "OD demand load calculation",
        "AccessibilityMap": "Accessibility map",
        "AccessibilityMapDuration": "Total duration (minutes)",
        "AccessibilityMapNumberOfPolygons": "Number of polygons to calculate",
        "AccessibilityMapDelta": "Delta (minutes)",
        "AccessibilityMapDeltaInterval": "Delat interval (minutes)",
        "AccessibilityMapExampleDurationAndNumberOfPolygons": "A total duration of 60 minutes with a number of polygons of 3 implies that we will obtain three polygons: accessibility at 20 minutes, 40 minutes and 60 minutes.",
        "AccessibilityMapExampleDelta": "A delta of 15 minutes with an interval of 5 minutes implies that the polygon area will be averaged over polygons obtained 15 minutes before, 10 minutes before, 5 minutes before, at specified time, 5 minutes after, 10 minutes after and 15 minutes after the specified departure or arrival time.",
        "AccessibilityMapAreaSquareKm": "Square km",
        "AccessibilityMapAreaSquarem": "Square meters",
        "AccessibilityMapAreaTitle": "Accessibility area in {{n}} minutes",
        "NumberOfAccessiblePOIs": "Number of accessible Points of interest",
        "NumberOfAccessiblePOIsByCategory": "Number of accessible Points of interest by category",
        "NumberOfAccessiblePOIsByDetailedCategory": "Number of accessible Points of interest by detailed category",
        "Scenario": "Scenario",
        "DataSource": "Data source",
        "CompareWithScenario": "Compare with scenario",
        "OdTripUuid": "OD trip uuid",
        "PlaceName": "Place name",
        "RoutingName": "Route name",
        "CalculationName": "Calculation name",
        "MinimumWaitingTimeMinutes": "Minimum waiting time (minutes)",
        "MinimumWaitingTimeMinutesHelp": "To account for timetable uncertainty, this value should be greater or equal to 1 minute. Suggested value: 3 minutes",
        "MaximumAccessEgressTravelTimeMinutes": "Maximum access and egress travel time (minutes)",
        "MaximumAccessEgressTravelTimeMinutesHelp": "To avoid long calculation time, this value has a maximum of 20 minutes.",
        "MaximumTransferTravelTimeMinutes": "Maximum access travel time when transferring (minutes)",
        "MaximumTransferTravelTimeMinutesHelp": "To avoid long calculation time, this value has a maximum of 20 minutes.",
        "MaximumTotalTravelTimeMinutes": "Maximum total travel time including access and egress (minutes)",
        "MaximumFirstWaitingTimeMinutes": "Maximum first waiting time (minutes)",
        "MaximumFirstWaitingTimeMinutesHelp": "If waiting time at first stop is greater than this value for a line, ignore the departure of this line at this stop",
        "MinimumWaitingTimeSecondsMustBeAtLeast1Minute": "Minimum waiting time must be at least 1 minute",
        "WalkingSpeedKph": "Walking speed (km/h)",
        "RoutingModes": "Calculate for the following modes",
        "waiting": "waiting",
        "OriginLongitude": "Origin longitude",
        "OriginLatitude": "Origin latitude",
        "DestinationLongitude": "Destination longitude",
        "DestinationLatitude": "Destination latitude",
        "SaveTrip": "Save this route",
        "SaveTripForBatch": "Save this route for batch routing",
        "DownloadBatchRoutingCsv": "Saved routes (CSV)",
        "ResetBatchRoutingExport": "Reset saved routes",
        "RoutingPort": "Routing server port",
        "SampleRatio": "Sample ratio [0,1]",
        "WithAlternatives": "Calculate with alternatives",
        "Detailed": "Detailed results with steps",
        "WithGeometries": "Include route geometries (geojson)",
        "ReverseOD": "Reverse",
        "true": "Yes",
        "false": "No",
        "contextMenu": {
            "SetAsOrigin": "Set as Origin",
            "SetAsDestination": "Set as Destination"
        },
        "GeoJSONWithShapes": "GeoJSON with geometries",
        "SaveOdPairsToDb": "Save these calculations?",
        "OdPairsDataSourceAction": "Name of the save?",
        "SaveToDbChoice": {
            "new": "New save",
            "overwrite": "Overwrite an existing save"
        },
        "NewDataSource": "New data source name",
        "OverwriteDataSource": "Data source to overwrite",
        "BatchRoutingHasMoved": "The batch routing calculation has moved to the batch calculations section. This section is available through the left menu.",
        "GoToBatchRouting": "Go to batch calculations section",
        "errors": {
            "RoutingModesIsEmpty": "Please select at least one routing mode.",
            "DepartureAndArrivalTimeAreBlank": "Departure or arrival time is required.",
            "DepartureAndArrivalTimeAreBothNotBlank": "Please provide departure time OR arrival time, but not both.",
            "ScenarioIsMissing": "The scenario is required.",
            "StartTimeIsMissing": "Start time is required.",
            "EndTimeIsMissing": "End time is required.",
            "AccessEgressTravelTimeSecondsTooLarge": "The maximum access and egress travel time is too high. Maximum: 20 minutes",
            "AccessEgressTravelTimeSecondsNoNegative": "The maximum access and egress travel time cannot be negative",
            "TransferTravelTimeSecondsTooLarge": "The maximum access travel time when transferring is too high. Maximum: 20 minutes",
            "TransferTravelTimeSecondsNoNegative": "The maximum access travel time when transferring cannot be negative",
            "NoResultFound": "The transit routing has returned no result. Verify the values for access and waiting time. Also make sure the origin and destination locations are not too far from the transit network.",
            "TrRoutingServerNotRunning": "The transit routing server is not running. Click on the transit server startup icon on the top right of the window to start it.",
            "TrRoutingServerError": "The transit routing server returned an error: {{error}}.",
            "CalculationNameIsMissing": "Calculation name is required.",
            "ProjectionIsMissing": "Projection is required",
            "IdAttributeIsMissing": "The column for id is required.",
            "OriginXAttributeIsMissing": "The column for origin x (or longitude) is required.",
            "OriginYAttributeIsMissing": "The column for origin y (or latitude) is required.",
            "DestinationXAttributeIsMissing": "The column for destination x (or longitude) is required.",
            "DestinationYAttributeIsMissing": "The column for destination y (or latitude) is required.",
            "XAttributeIsMissing": "The column for x (or longitude) is required.",
            "YAttributeIsMissing": "The column for y (or longitude) is required.",
            "TimeAttributeIsMissing": "The column for departure or arrival time is required.",
            "TimeFormatIsMissing": "The departure/arrival time format is required.",
            "TimeAttributeDepartureOrArrivalIsMissing": "The time type is required.",
            "DeltaIntervalIsMissing": "Delta interval is required.",
            "DeltaIsMissing": "Delta is required.",
            "DeltaIntervalIsInvalid": "Delta interval is invalid.",
            "DeltaIsInvalid": "Delta is invalid.",
            "DeltaIntervalIsTooLarge": "Delta Interval is to high (maximum 30 minutes).",
            "DeltaIsToLarge": "Delta is too high (maximum 30 minutes).",
            "DeltaIntervalMustBeAMultipleOfDelta": "The delta interval must be a multiple of the delta.",
            "MaxTotalTravelTimeSecondsIsMissing": "Total duration is missing.",
            "MaxTotalTravelTimeSecondsIsInvalid": "Total duration is invalid.",
            "MaxTotalTravelTimeSecondsIsToLarge": "Total duration is too high (maximum 60 minutes).",
            "NumberOfPolygonsIsMissing": "The number of polygons is missing.",
            "NumberOfPolygonsIsInvalid": "The number of polygons is invalid.",
            "NumberOfPolygonsIsToLarge": "The number of polygons is too high (must be lower or equal to the total duration).",
            "MinWaitingTimeIsMissing": "Minimum waiting time is missing.",
            "MinWaitingTimeIsInvalid": "Minimum waiting time is invalid.",
            "MinWaitingTimeIsToLarge": "Minimum waiting time is too high (maximum 10 minutes).",
            "MaxAccessEgressTravelTimeSecondsIsMissing": "The maximum access and egress travel time is missing.",
            "MaxAccessEgressTravelTimeSecondsIsInvalid": "The maximum access and egress travel time is invalid.",
            "MaxTransferTravelTimeSecondsIsMissing": "The maximum access travel time when transferring is missing.",
            "MaxTransferTravelTimeSecondsIsInvalid": "The maximum access travel time when transferring is invalid.",
            "WalkingSpeedMpsIsMissing": "Walking speed is missing (default should be 5 km/h).",
            "WalkingSpeedMpsIsInvalid": "Walking speed is invalid.",
            "WalkingSpeedMpsIsToLarge": "Walking speed is too high (maxmium 10 km/h).",
            "WalkingSpeedMpsIsToLow": "Walking speed is too low (minimum 2 km/h).",
            "MISSING_DATA_AGENCIES": "No agencies found",
            "MISSING_DATA_SERVICES": "No services found",
            "MISSING_DATA_NODES": "No nodes found",
            "MISSING_DATA_LINES": "No lines found",
            "MISSING_DATA_PATHS": "No paths found",
            "MISSING_DATA_SCENARIOS": "No scenarios found",
            "MISSING_DATA_SCHEDULES": "No timetables found",
            "NO_ROUTING_FOUND": "The transit routing has returned no result. Verify the values for access and waiting time.",
            "NO_ACCESS_AT_ORIGIN": "The transit routing has returned no result: The origin is too far from the transit network.",
            "NO_ACCESS_AT_DESTINATION": "The transit routing has returned no result: The destination is too far from the transit network.",
            "NO_ACCESS_AT_ORIGIN_AND_DESTINATION": "The transit routing has returned no result: The origin and destination are too far from the transit network.",
            "NO_SERVICE_FROM_ORIGIN": "The transit routing has returned no result: There is no service from origin within the specified parameters.",
            "NO_SERVICE_TO_DESTINATION": "The transit routing has returned no result: There is no service to destination within the specific parameters.",
            "EMPTY_SCENARIO": "The scenario is empty.",
            "MISSING_PARAM_SCENARIO": "The scenario_id parameter has not been specified or the scenario does not exist on the server.",
            "MISSING_PARAM_ORIGIN": "The origin parameter is missing.",
            "MISSING_PARAM_DESTINATION": "The destination parameter is missing.",
            "MISSING_PARAM_TIME_OF_TRIP": "The time of trip is missing.",
            "INVALID_ORIGIN": "The origin parameter is invalid.",
            "INVALID_DESTINATION": "The destination parameter is invalid.",
            "INVALID_NUMERICAL_DATA": "One numerical parameter is invalid.",
            "PARAM_ERROR_UNKNOWN": "Unknown error in one of the query parameters.",
            "DataError": "Invalid cache data for the routing engine. Try to save all data again. If the problem persists, contact the administrators.",
            "ErrorForMode": "Routing calculation for mode '{{mode}}' has failed. No results were returned.",
            "TransitBatchRouteCannotBeCalculatedBecauseError": "An error occurred during batch calculation. Please verify your input file and parameters and try again. If the problem persists, contact the administrators.",
            "InvalidDepartureOrArrivalTime": "Departure or arrival time are invalid",
            "BatchRouteErrorOnLine": "Error on line {{n}}:",
            "BatchRouteUnknownErrorOnLine": "Error on line {{n}}",
            "TooManyErrorsParsingFile": "Too many errors in file",
            "BatchRouteMoreErrors": "The file contains more errors, not detailed here",
            "ErrorCalculatingOdTrip": "Error calculating OD pair {{id}}",
            "ErrorSavingOdTripsToDb": "Error saving od pairs to database. The data source was not saved.",
            "DataSourceDoesNotExists": "The specified data source does not exists.",
            "DataSourceAlreadyExists": "A data source with that name already exists for OD calculations.",
            "InvalidOdTripsDataSource": "Invalid OD calculations data source.",
            "ErrorCalculatingLocation":  "Error calculating location {{id}}",
            "UserDiskQuotaReached": "Maximum allowed disk space has been reached. Please delete old tasks to delete their files.",
            "RoutingParametersInvalidForBatch": "Routing parameters are invalid. Make sure the scenario is set and times have a valid value."
        },
        "actions": {
            "walking": "Walk",
            "boarding": "Board",
            "unboarding": "Alight"
        },
        "results": {
            "WalkOnly": "Walking only",
            "TravelTime": "Travel time",
            "OptimisedTravelTime": "Travel time (optimized departure and arrival)",
            "NonOptimisedTravelTime": "Travel time (non-optimized departure and arrival)",
            "Distance": "Distance",
            "NonOptimisedDepartureTime": "Non optimized departure time",
            "DepartureTime": "Departure time",
            "OptimisedDepartureTime": "Optimized departure time",
            "LostTimeAtDepartureIfNonOptimised": "Time lost if departure time not optimized",
            "LostTimeAtArrivalIfNonOptimised": "Time lost if arrival time not optimized",
            "ArrivalTime": "Arrival time",
            "NonOptimisedArrivalTime": "Non optimized arrival time",
            "TotalDistance": "Total distance",
            "AccessTravelTime": "Access travel time",
            "EgressTravelTime": "Egress travel time",
            "NumberOfTransfers": "Number of transfers",
            "TotalTransferTravelTime": "Total access travel time when transferring",
            "TotalInVehicleTime": "Total in-vehicle time",
            "TotalAccessTravelTime": "Total access time (access, egress and access when transferring)",
            "TotalTransferWaitingTime": "Total waiting time when transferring"
        },
        "TotalTravelTime": "Total travel time",
        "AverageTravelTime": "Average travel time per trip",
        "TotalNumberOfTransfers": "Total number of transfers",
        "TotalNumberOfNoTransferTrips": "Total number of no transfer trips (direct)",
        "AverageNumberOfTransfers": "Average number of transfers per trip",
        "TotalAccessEgressTime": "Access/egress total travel time",
        "AverageAccessEgressTime": "Average access/egress travel time per trip",
        "TotalTransferTime": "Total transfer access travel time",
        "AverageTransferTime": "Average transfer access travel time",
        "TotalWaitingTime": "Total waiting time",
        "AverageWaitingTime": "Average waiting time per trip (departure time optimized)",
        "AverageWaitingTimeWithExactDepartureTime": "Average waiting time per trip (departure time not optimized)",
        "TotalNumberOfRoutableTrips": "Number of routable trips",
        "TotalNumberOfNonRoutableTrips": "Number of non-routable trips",
        "WithGeometry": "Calculate geometry (shape)",
        "withGeometryChoices": {
            "true": "Yes",
            "false": "No"
        },
        "IdAttribute": "Column for id",
        "OriginXAttribute": "Column for origin x (or longitude)",
        "OriginYAttribute": "Column for origin y (or latitude)",
        "DestinationXAttribute": "Column for destination x (or longitude)",
        "DestinationYAttribute": "Column for destination y (or latitude)",
        "XAttribute": "Column for x (or longitude)",
        "YAttribute": "Column for y (or latitude)",
        "TimeAttribute": "Column for departure or arrival time",
        "TimeFormat": "Departure/arrival time format",
        "TimeAttributeDepartureOrArrival": "Time type",
        "departureTime": "Departure time",
        "arrivalTime": "Arrival time",
        "HH_MM": "HH:MM",
        "HH_MM__HH_MM_SS": "HH:MM or HH:MM:SS",
        "HMM": "HMM",
        "SecondsSinceMidnight": "Seconds after midnight"

    },

    "gtfs": {
        "ButtonImport": "Import",
        "Import": "Import from a GTFS feed",
        "Export": "Export as a GTFS feed",
        "GtfsFeedFileDownload": "Downlooad GTFS feed",
        "PrepareGtfsFeed": "prepare GTFS feed",
        "ZipFile": "Zip file",
        "SelectedAgencies": "Which agencies do you wish to import?",
        "SelectedAgenciesExport": "Which agencies do you wish to export?",
        "ExportFileName": "GTFS feed file name",
        "SelectedLines": "Which lines do you wish to import?",
        "SelectedServices": "Which services do you wish to import?",
        "MergeSamePeriodServices": "Merge services for same periods? (use with caution, the resulting service will contain all services for the same period)",
        "DefaultAgencyColor": "Default agencies color",
        "DefaultNodeColor": "Default nodes and stops color",
        "ImportPaths": "Import paths",
        "ImportTrips": "Import trips",
        "OperationInProgress": "Import operation in progress",
        "ImportGtfsData": "Import data",
        "NewOrUpdate": "Select the elements to import from the GTFS. If those elements already exists in the system, they will be updated. To keep the current agency as is, you may duplicate the agency.",
        "AgencyExists": "Agency {{agency}} already exists. What do you want to do?",
        "NewAgencyName": "New agency name",
        "SelectExistingAgency": "Select and existing agency",
        "replace": "Replace agency content (all current lines and schedules will be deleted)",
        "mergeAndIgnore": "Merge new agency content (existing lines and schedules won't be re-imported)",
        "mergeAndReplace": "Merge and update agency content (existing lines and schedules will be updated)",
        "create": "Create a new agency",
        "errors": {
            "ZipFileIsRequired": "Zip file is required.",
            "PeriodsGroupIsRequired": "Periods group is required.",
            "ErrorUploadingFile": "Error on the server when uploading and extracting the zip file. Please try again, if the error persist, consult the system administrator.",
            "ErrorImportingSchedulesForLine": "Error importing timetables for line {{shortname}} - {{longname}}.",
            "TooManyErrorsImportingSchedules": "Too many errors importing timetables, aborting.",
            "SelectedAgenciesMissing": "Please select at least one agency.",
            "FilenameMissing": "File name is required.",
            "CannotGenerateShapeFromGtfs": "Line {{lineShortName}} - {{lineName}}: shape in GTFS file {{shapeGtfsId}}: something is wrong with the stops order, or there are ambiguous loops.",
            "TripHasNoShape": "Line {{lineShortName}}: Cannot generate a path for trip {{tripId}} because there is no shape.",
            "PathGenerationErrorForLine": "Line {{lineShortName}}: Error generating paths for line. The paths have not been created.",
            "PathGenerationError": "An error occurred while importing paths from GTFS. Paths may not have been properly imported.",
            "ErrorImportingNodes": "An error occurred while importing stops from GTFS. Stops may not have been imported properly.",
            "ErrorImportingAgencies": "An error occurred while importing agencies from GTFS. Agencies may not have been imported properly.",
            "ErrorImportingLines": "An error occurred while importing lines from GTFS. Lines may not have been imported properly.",
            "ErrorImportingServices": "An error occurred while importing services from GTFS. Services may not have been imported properly.",
            "ErrorExportingGtfs": "An error occurred while generating the GTFS file."
        }
    },
    "simulation": {
        "Simulation": "Simulation",
        "Simulations": "Simulations",
        "List": "Simulations",
        "Name": "Name",
        "Shortname": "Shortname",
        "Description": "Description",
        "InternalId": "Internal ID",
        "Algorithm": "Simulation algorithm",
        "NumberOfThreads": "Number of threads",
        "NumberOfLinesMin": "Minimum number of lines",
        "NumberOfLinesMax": "Maximum number of lines",
        "PopulationSizeMin": "Minimum population size",
        "PopulationSizeMax": "Maximum population size",
        "VehiclesCount": "Number of vehicles (fleet size)",
        "MaxIntervalMinutes": "Maximum period (minutes)",
        "MaxIntervalMinutesHelp": "The maximum time between departures for a line. For optimal service, it is suggested to keep it lower than 15 minutes. But times up to 60 minutes are accepted.",
        "MinIntervalMinutes": "Minimum period (minutes)",
        "MinIntervalMinutesHelp": "The minimum time between departures for a line. The minimum value should be higher than 3, less than that will have no effect on the calculations.",
        "NumberOfElites": "Number of elites per generation",
        "NumberOfRandoms": "Number of random per generation",
        "CrossoverNumberOfCuts": "Number of cuts in crossover",
        "CrossoverProbability": "Probability of crossover",
        "MutationProbability": "Probability of mutation",
        "TournamentSize": "Tournament selection size",
        "TournamentProbability": "Tournament probability",
        "ShuffleGenes": "Shuffle genes before reproduction",
        "KeepGenerations": "Number of generations to keep",
        "KeepCandidates": "Number of candidates to keep in generations",
        "OdTripsSampleRatio": "Percentage of OD trips to include",
        "NumberOfGenerations": "Number of generations",
        "Color": "Color",
        "Edit": "Simulation",
        "Delete": "Delete simulation",
        "ConfirmDelete": "Do you confirm deletion of this simulation?",
        "ImportFromJson": "Import simulations (JSON)",
        "New": "New simulation",
        "Id": "ID",
        "Uuid": "UUID",
        "true": "Yes",
        "false": "No",
        "enabled": "Active",
        "SaveToCache": "Archive simulations",
        "SaveSimulationToCache": "Archive simulation",
        "LoadSimulationFromCache": "Load simulation archive",
        "routingParameters": "Routing parameters",
        "simulationParameters": "Simulation parameters",
        "NonSimulatedServices": "Non simulated services to use",
        "algorithmParameters": "Algorithm configuration",
        "SimulationRuns": "Simulation runs",
        "SimulationRunDelete": "Delete simulation run",
        "SimulationRunDeleteScenariosAndServices": "Also delete scenarios and services create during this run?",
        "SimulationRunDeleteCancel": "Cancel",
        "SimulationRunDeleteCascade": "Yes, delete scenarios and services as well",
        "SimulationRunDeleteNoCascade": "No, delete run but keep scenarios and services created",
        "Results": "Results",
        "Parameters": "Parameters",
        "RuntimeOptions": "Runtime Configuration",
        "simulationClasses": {
            "LineAndNumberOfVehiclesGASimulation": "Genetic algorithm with lines and number of vehicles"
        },
        "simulationMethods": {
            "SelectSimulationFunctions": "Select functions to use for simulation",
            "OdTrips": "OD trips",
            "OdTripsDataSource": "Data source for OD",
            "OdTripsSampleRatio": "Sample ratio (between 0 and 1)",
            "AccessibilityMap": "Using accessibility maps",
            "AccessMapDataSources": "Data sources for places",
            "AccessMapMaxSampleRatio": "Maximum sample ratio to test (between 0 and 1)",
            "MethodWeight": "Weight of the cost for simulation function \"{{method}}\"",
            "MethodWeightError": "Invalid weight. Must be between 0 and {{maxWeight}}.",
            "MustSelectOneFunction": "You must select at least one simulation function"
        },
        "fitness": {
            "fitnessSorter": "Sorting direction of cost results",
            "maximize": "Maximize (higher value is better)",
            "minimize": "Minimize (lower value is better)",
            "odTripFitnessFunction": "Cost function for OD trip result",
            "travelTimeCost": "Travel time",
            "travelTimeWithTransferPenalty": "Travel time + 10 min penalty for transfers",
            "fitnessFunction": "Cost function for the scenario",
            "hourlyUserPlusOperatingCosts": "User + operating costs (hourly)",
            "hourlyUserCosts": "User cost (hourly)",
            "hourlyOperatingCosts": "Operating cost (hourly)"
        },
        "DuplicateSimulation": "Duplicate simulation",
        "Copy": "Copy",
        "LineSetAgencies": "Line set agencies",
        "KeepLines": "Always keep these lines",
        "KeepLinesSchedules": "Keep existing schedules for these lines",
        "Period": "Period",
        "Periods": "Periods",
        "PeriodsGroup": "Periods group",
        "PeriodsGroups": "Periods groups",
        "SchedulesPeriod": "Schedules eriod",
        "SchedulesPeriods": "schedules periods",
        "SchedulesPeriodsGroup": "Schedules periods group",
        "SchedulesPeriodsGroups": "Schedules periods groups",
        "StartTime": "Start [HH:MM]",
        "EndTime": "End [HH:MM]",
        "errors": {
            "NameIsRequired": "Simulation name is required.",
            "SimulationClassIsRequired": "Simulation class is required.",
            "PeriodsGroupIsRequired": "Periods group is required.",
            "PeriodIsRequired": "Period is required.",
            "SimulatedPeriodsGroupIsRequired": "Simulated periods group is required.",
            "SimulatedPeriodIsRequired": "Simulated period is required.",
            "StartTimeIsRequired": "Start time is required.",
            "EndTimeIsRequired": "End time is required.",
            "NumberOfLinesMinNoNegative": "Minimum number of lines must be positive",
            "NumberOfLinesMaxNoNegative": "Maximum number of lines must be positive",
            "NumberOfLinesMinHigherThanMax": "Minimum number of lines is higher than maximum",
            "NumberOfVehiclesNoNegative": "The number of vehicles must be positive",
            "MaxTimeBetweenPassagesNoNegative": "The maximum time between passages must be positive",
            "MaxTimeBetweenPassagesTooHigh": "The maximum time between passages is too high",
            "MinTimeBetweenPassagesTooLow": "The minimum time between passages is too low",
            "MinTimeHigherThanMax": "The minimum time between passages is greater than maximum",
            "MinTimeBetweenPassagesTooHigh": "The minimum time between passages is too high",
            "UnknownAlgorithm": "The selected algorithm is unavailable",
            "SimulatedAgenciesIsEmpty": "At least one agency to simulate must be selected",
            "PopulationSizeMinGreaterThanMax": "Minimum population size is greater than maximum",
            "CandidatesToKeepGreaterThanPopulation": "Number of candidates to keep is greater than population",
            "GenerationsToKeepGreaterThanGenerations": "Number of generations to keep is greater than number of generations"
        }
    },
    "jobs": {
        "Date": "Date",
        "Status": "Status",
        "JobType": "Name",
        "Data": "Parameters",
        "Resources": "Files",
        "Status_pending": "Pending",
        "Status_inProgress": "In progress",
        "Status_cancelled": "Cancelled",
        "Status_completed": "Completed",
        "Status_failed": "Failed",
        "ShowFiles": "Display files",
        "Delete": "Delete job",
        "ConfirmDelete": "Do you confirm deletion of this job? All related files will be deleted.",
        "Cancel": "Cancel job",
        "ConfirmCancel": "Do you confirm cancellation of this job?",
        "batchRoute": {
            "files": {
                "input": "Input file: {{filename}}",
                "csv": "CSV",
                "geojson": "GeoJSON",
                "detailedCsv": "CSV with detailed steps"
            }
        },
        "batchAccessMap": {
            "files": {
                "input": "Input file: {{filename}}",
                "csv": "CSV",
                "geojson": "GeoJSON"
            }
        }
    },
    "batchCalculation": {
        "List": "Calculation jobs",
        "New": "New calculation",
        "UploadFile": "Upload file",
        "DemandData": "Demand data",
        "AnalysisParameters": "Parameters",
        "ConfigureDemand": "Configure demand data",
        "ConfigureParameters": "Configure analysis parameters",
        "AnalysisSummary": "Analysis summary",
        "ReplayJob": "Create new calculation from this one",
        "UploadedFile": "Uploaded file",
        "FromPreviousJob": "Data from previous calculation",
        "errors": {
            "InputFileUnavailable": "Input file does not exist for this job",
            "ErrorGettingReplayParameters": "Error getting execution data to replay calculation"
        }
    }
}
