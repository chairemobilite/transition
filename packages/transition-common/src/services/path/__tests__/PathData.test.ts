/*
 * Copyright 2022, Polytechnique Montreal and contributors
 *
 * This file is licensed under the MIT License.
 * License text available at https://opensource.org/licenses/MIT
 */
import { v4 as uuidV4 } from 'uuid';
import _cloneDeep from 'lodash/cloneDeep';
import Path, { PathAttributes } from '../Path';

const defaultLineId = uuidV4();
const node1Id = uuidV4();
const node2Id = uuidV4();

export const arbitraryData = {
    defaultLayoverRatioOverTotalTravelTime: 0.2,
    defaultMinLayoverTimeSeconds: 120,
    defaultRoutingEngine: 'engine',
    defaultRoutingMode: 'bus',
    defaultAcceleration: 1.1,
    defaultDeceleration: 1.1,
    defaultDwellTimeSeconds: 30,
    ignoreNodesDefaultDwellTimeSeconds: false,
    defaultRunningSpeedKmH: 50,
    maxRunningSpeedKmH: 100,
    routingMode: 'rail',
    routingEngine: 'engine',
    // The following properties contain array of data per node.
    nodeTypes: ['engine', 'engine'],
    waypoints: [],
    waypointTypes: [],
    variables: {
        d_p: null,
        n_q_p: null,
        d_l_min: null,
        d_l_max: null,
        d_l_avg: null,
        d_l_med: null,
        T_o_p: null,
        n_s_p: null,
    },
    travelTimeWithoutDwellTimesSeconds: 124,
    operatingSpeedMetersPerSecond: 23.45,
    operatingTimeWithoutLayoverTimeSeconds: 12.23
};

export const arbitraryDataWithoutTravelTimes = {
    defaultLayoverRatioOverTotalTravelTime: 0.2,
    defaultMinLayoverTimeSeconds: 120,
    defaultRoutingEngine: 'engine' as const,
    defaultRoutingMode: 'bus' as const,
    defaultAcceleration: 1.1,
    defaultDeceleration: 1.1,
    defaultDwellTimeSeconds: 30,
    ignoreNodesDefaultDwellTimeSeconds: false,
    defaultRunningSpeedKmH: 50,
    maxRunningSpeedKmH: 120,
    routingMode: 'rail',
    routingEngine: 'engine' as const,
    // The following properties contain array of data per node.
    nodeTypes: ['engine', 'engine'],
    waypoints: [],
    waypointTypes: [],
    variables: {
        d_p: null,
        n_q_p: null,
        d_l_min: null,
        d_l_max: null,
        d_l_avg: null,
        d_l_med: null,
        T_o_p: null,
        n_s_p: null,
    },
    operatingSpeedMetersPerSecond: 124,
    operatingTimeWithoutLayoverTimeSeconds: 12.23
};

export const getPathAttributesWithData = (withTravelTime = true, {
    lineId = defaultLineId
}) => {
    return {
        id: uuidV4(),
        name: 'PathFull',
        geography: { type: 'LineString' as const, coordinates: [[-73, 45], [-73.0001, 45]] },
        direction: 'outbound' as const,
        line_id: lineId,
        is_enabled: true,
        /** array of node ids in this path */
        nodes: [node1Id, node2Id],
        /** TODO what's the difference with nodes? */
        stops: [node1Id, node2Id],
        /** TODO document? */
        segments: [],
        mode: 'bus' as const,
        data: {
            ...(withTravelTime ? arbitraryData : arbitraryDataWithoutTravelTimes)
        },
        is_frozen: false
    };
};

/** Simple 4 nodes path generated by Transition */
const pathAttributesFromTransition = {
    id: uuidV4(),
    mode: "bus",
    name: "Test bus",
    nodes: [uuidV4(), uuidV4(), uuidV4(), uuidV4()],
    stops: [],
    segments: [0,20,43],
    direction: "outbound" as const,
    integer_id: 10711,
    is_enabled: true,
    data: {
        segments:[
            { distanceMeters:510, travelTimeSeconds:119 },
            { distanceMeters:515, travelTimeSeconds:89 },
            { distanceMeters: 444, travelTimeSeconds: 85 }
        ],
        from_gtfs: false,
        nodeTypes: [ "engine", "engine", "engine", "engine" ],
        variables: { "d_p":1469, "T_o_p":360, "n_q_p":4, "n_s_p":4, "d_l_avg":490, "d_l_max":515, "d_l_med":510, "d_l_min":444 },
        waypoints: [[],[],[],[]],
        routingMode: "bus_urban",
        routingEngine: "engine" as const,
        routingFailed: false,
        waypointTypes: [[],[],[],[]],
        dwellTimeSeconds: [0,20,20,20],
        defaultRoutingMode:"bus_urban",
        layoverTimeSeconds:180,
        maxRunningSpeedKmH: 120,
        defaultAcceleration: 1,
        defaultDeceleration: 1,
        totalDistanceMeters: 1469,
        defaultRoutingEngine: "engine" as const,
        totalDwellTimeSeconds: 60,
        defaultRunningSpeedKmH: 40,
        defaultDwellTimeSeconds:20,
        defaultMinLayoverTimeSeconds: 180,
        operatingSpeedMetersPerSecond: 4.08,
        travelTimeWithoutDwellTimesSeconds: 300,
        operatingTimeWithLayoverTimeSeconds: 540,
        totalTravelTimeWithReturnBackSeconds: 540,
        defaultLayoverRatioOverTotalTravelTime: 0.1,
        operatingTimeWithoutLayoverTimeSeconds: 360,
        operatingSpeedWithLayoverMetersPerSecond: 2.72,
        directRouteBetweenTerminalsDistanceMeters: 687,
        averageSpeedWithoutDwellTimesMetersPerSecond: 4.9,
        directRouteBetweenTerminalsTravelTimeSeconds: 142
    },
    is_frozen: false,
    geography: {
        type: "LineString" as const,
        coordinates: [[-73.64791,45.543621],[-73.647675,45.544033],[-73.647058,45.545112],[-73.646883,45.545418],[-73.646769,45.545539],[-73.646558,45.545918],[-73.646449,45.546105],[-73.646422,45.546151],[-73.646364,45.546248],[-73.646323,45.546324],[-73.64631,45.546347],[-73.645885,45.547087],[-73.64584,45.547164],[-73.645806,45.547224],[-73.645776,45.547275],[-73.645755,45.547312],[-73.645621,45.547545],[-73.645538,45.547686],[-73.645479,45.547785],[-73.645463,45.547812],[-73.645433,45.547862],[-73.64543,45.547868],[-73.645345,45.547843],[-73.642493,45.547025],[-73.64244,45.54701],[-73.642405,45.547],[-73.642356,45.546987],[-73.642275,45.546964],[-73.641657,45.546787],[-73.641333,45.546697],[-73.640704,45.546517],[-73.640139,45.546353],[-73.639934,45.546292],[-73.639874,45.546272],[-73.639826,45.546254],[-73.639781,45.546236],[-73.639761,45.546226],[-73.639739,45.546215],[-73.639717,45.546201],[-73.639699,45.546185],[-73.639678,45.546164],[-73.639657,45.54614],[-73.639634,45.546113],[-73.639492,45.545975],[-73.639409,45.545894],[-73.639364,45.545842],[-73.639321,45.545782],[-73.639284,45.545731],[-73.639249,45.545686],[-73.639219,45.545655],[-73.639196,45.545633],[-73.63917,45.545613],[-73.639146,45.545596],[-73.639114,45.545575],[-73.639086,45.545563],[-73.638994,45.545527],[-73.639083,45.545429],[-73.639124,45.54538],[-73.639162,45.545338],[-73.639176,45.545323],[-73.639222,45.545268],[-73.639361,45.545107],[-73.639563,45.544875],[-73.639614,45.544816],[-73.63964,45.544786],[-73.639669,45.544751],[-73.639871,45.544508],[-73.639891,45.544487],[-73.639951,45.544417],[-73.639996,45.544368],[-73.640033,45.544328],[-73.640059,45.544296],[-73.640198,45.544125],[-73.640347,45.543939],[-73.640511,45.543729],[-73.640561,45.543666],[-73.640644,45.543561],[-73.640648,45.543555],[-73.640793,45.543351],[-73.640898,45.5432],[-73.640946,45.543129],[-73.641,45.543049],[-73.641042,45.542981],[-73.641078,45.542925],[-73.641323,45.542538]]
    }
};

/** This path is taken from Transition after import from GTFS, using the trRouting's simple unit test GTFS */
const pathAttributesFromGtfs = {
    id: uuidV4(),
    mode: "bus",
    name: "North",
    nodes: [ uuidV4(), uuidV4(), uuidV4(), uuidV4(), uuidV4() ],
    stops: [],
    segments: [0,35,48,59],
    direction: "outbound" as const,
    integer_id: 10712,
    is_enabled: true,
    data: {
        gtfs: { shape_id:"2f31893e-b2fb-4ebe-bf1b-2ee77fe1f96b" },
        segments:[
            { distanceMeters: 1186, travelTimeSeconds: 210 },
            { distanceMeters: 1160, travelTimeSeconds: 190 },
            { distanceMeters: 980, travelTimeSeconds: 180 },
            { distanceMeters: 1544, travelTimeSeconds: 270}
        ],
        from_gtfs: true,
        nodeTypes: ["engine","engine","engine","engine","engine"],
        variables: {"d_p":null,"n_q_p":0,"n_s_p":0,"d_l_avg":null,"d_l_max":null,"d_l_med":null,"d_l_min":null},
        waypoints: [],
        routingMode: "bus_urban",
        routingEngine: "engine" as const,
        waypointTypes: [], 
        dwellTimeSeconds: [0,20,180,30,0],
        defaultRoutingMode: "bus_urban",
        layoverTimeSeconds: 180,
        maxRunningSpeedKmH: 120,
        defaultAcceleration: 1,
        defaultDeceleration: 1,
        totalDistanceMeters: 4867,
        defaultRoutingEngine: "engine" as const,
        totalDwellTimeSeconds: 230,
        defaultRunningSpeedKmH: 40,
        defaultDwellTimeSeconds: 20,
        birdDistanceBetweenTerminals: 4681.864684428807,
        defaultMinLayoverTimeSeconds: 180,
        operatingSpeedMetersPerSecond: 4.51,
        travelTimeWithoutDwellTimesSeconds: 850,
        operatingTimeWithLayoverTimeSeconds: 1260,
        defaultLayoverRatioOverTotalTravelTime: 0.1,
        operatingTimeWithoutLayoverTimeSeconds: 1080,
        operatingSpeedWithLayoverMetersPerSecond: 3.86,
        averageSpeedWithoutDwellTimesMetersPerSecond: 5.72
    },
    is_frozen: false,
    geography: {
        type: "LineString" as const,
        coordinates: [[-73.589178,45.526828],[-73.589403,45.52693],[-73.589412,45.526934],[-73.589447,45.52695],[-73.589537,45.526991],[-73.591687,45.527964],[-73.591748,45.527992],[-73.59181,45.52802],[-73.593183,45.528639],[-73.593237,45.528663],[-73.593307,45.528694],[-73.593775,45.528905],[-73.593788,45.528911],[-73.59389,45.528957],[-73.59395,45.528984],[-73.594198,45.529096],[-73.594372,45.529174],[-73.595189,45.529603],[-73.595268,45.529646],[-73.595306,45.529664],[-73.596117,45.530042],[-73.596592,45.530263],[-73.597484,45.530656],[-73.597852,45.530822],[-73.597985,45.530883],[-73.598267,45.53101],[-73.598308,45.531017],[-73.598501,45.531047],[-73.598622,45.531101],[-73.598657,45.531116],[-73.598751,45.531157],[-73.59891,45.531229],[-73.60052,45.531956],[-73.601907,45.53258],[-73.601947,45.532598],[-73.601947,45.532598],[-73.604803,45.533896],[-73.605015,45.533992],[-73.605611,45.534264],[-73.605834,45.534366],[-73.605908,45.534399],[-73.606221,45.534542],[-73.608171,45.535431],[-73.608498,45.535579],[-73.611886,45.537123],[-73.611948,45.537152],[-73.612093,45.537219],[-73.614325,45.538249],[-73.614413,45.53829],[-73.614414,45.53829],[-73.614434,45.538299],[-73.614575,45.53835],[-73.614592,45.538358],[-73.617302,45.539186],[-73.620236,45.540025],[-73.620661,45.540145],[-73.622608,45.540697],[-73.62271,45.540726],[-73.622982,45.540803],[-73.626013,45.541679],[-73.626014,45.541679],[-73.626114,45.541708],[-73.629183,45.542587],[-73.632335,45.543494],[-73.635427,45.544383],[-73.63795,45.545108],[-73.638083,45.545147],[-73.638465,45.545256],[-73.638552,45.545281],[-73.638364,45.545496],[-73.638058,45.545846],[-73.638156,45.545875],[-73.638449,45.545934],[-73.638622,45.545973],[-73.638962,45.545599],[-73.63901,45.545549],[-73.639106,45.545425],[-73.639207,45.545418],[-73.639279,45.545413],[-73.639582,45.545503],[-73.640126,45.54566],[-73.641633,45.546094],[-73.642633,45.546382]]
    }
};

export const getPathObjectWithData = ({
    lineId = defaultLineId,
    pathCollection
}) => {
    const attributes = getPathAttributesWithData(true, { lineId });
    const path = new Path(attributes, true);
    pathCollection.add(path);
    return path;
};

export const getPathObject = ({
    lineId = defaultLineId,
    pathCollection
}, pathType: 'default' | 'gtfs' | 'smallReal') => {
    const attributes: any = pathType === 'default' ?
        getPathAttributesWithData(true, { lineId }) :
        pathType === 'gtfs' ? _cloneDeep(pathAttributesFromGtfs) : _cloneDeep(pathAttributesFromTransition);
    attributes.line_id = lineId;
    const path = new Path(attributes, true);
    pathCollection.add(path);
    return path;
};

test('Dummy Path', () => {
    // Dummy test so this file passes
});
