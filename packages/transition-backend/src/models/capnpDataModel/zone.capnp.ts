/* tslint:disable */

/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */

import * as capnp from 'capnp-ts';
import { ObjectSize as __O, Struct as __S } from 'capnp-ts';
export const _capnpFileId = 'd6181097cef171c1';
export class Zone extends __S {
    static readonly _capnp = { displayName: 'Zone', id: 'c59df40d7a688309', size: new __O(8, 9) };
    getUuid(): string {
        return __S.getText(0, this);
    }
    setUuid(value: string): void {
        __S.setText(0, value, this);
    }
    getId(): number {
        return __S.getInt32(0, this);
    }
    setId(value: number): void {
        __S.setInt32(0, value, this);
    }
    getDataSourceUuid(): string {
        return __S.getText(1, this);
    }
    setDataSourceUuid(value: string): void {
        __S.setText(1, value, this);
    }
    getShortname(): string {
        return __S.getText(2, this);
    }
    setShortname(value: string): void {
        __S.setText(2, value, this);
    }
    getName(): string {
        return __S.getText(3, this);
    }
    setName(value: string): void {
        __S.setText(3, value, this);
    }
    getColor(): string {
        return __S.getText(4, this);
    }
    setColor(value: string): void {
        __S.setText(4, value, this);
    }
    getDescription(): string {
        return __S.getText(5, this);
    }
    setDescription(value: string): void {
        __S.setText(5, value, this);
    }
    adoptGeography(value: capnp.Orphan<capnp.Data>): void {
        __S.adopt(value, __S.getPointer(6, this));
    }
    disownGeography(): capnp.Orphan<capnp.Data> {
        return __S.disown(this.getGeography());
    }
    getGeography(): capnp.Data {
        return __S.getData(6, this);
    }
    hasGeography(): boolean {
        return !__S.isNull(__S.getPointer(6, this));
    }
    initGeography(length: number): capnp.Data {
        return __S.initData(6, length, this);
    }
    setGeography(value: capnp.Data): void {
        __S.copyFrom(value, __S.getPointer(6, this));
    }
    getInternalId(): string {
        return __S.getText(7, this);
    }
    setInternalId(value: string): void {
        __S.setText(7, value, this);
    }
    getData(): string {
        return __S.getText(8, this);
    }
    setData(value: string): void {
        __S.setText(8, value, this);
    }
    getIsFrozen(): number {
        return __S.getInt8(4, this);
    }
    setIsFrozen(value: number): void {
        __S.setInt8(4, value, this);
    }
    toString(): string {
        return 'Zone_' + super.toString();
    }
}
