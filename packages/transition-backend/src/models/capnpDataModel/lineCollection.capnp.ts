/* tslint:disable */

/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */

import * as capnp from 'capnp-ts';
import { ObjectSize as __O, Struct as __S } from 'capnp-ts';
export const _capnpFileId = 'cdd4740831f7524a';
export class Line extends __S {
    static readonly _capnp = { displayName: 'Line', id: 'd269e1b843a73de0', size: new __O(8, 10) };
    getUuid(): string {
        return __S.getText(0, this);
    }
    setUuid(value: string): void {
        __S.setText(0, value, this);
    }
    getInternalId(): string {
        return __S.getText(1, this);
    }
    setInternalId(value: string): void {
        __S.setText(1, value, this);
    }
    getMode(): string {
        return __S.getText(2, this);
    }
    setMode(value: string): void {
        __S.setText(2, value, this);
    }
    getCategory(): string {
        return __S.getText(3, this);
    }
    setCategory(value: string): void {
        __S.setText(3, value, this);
    }
    getAgencyUuid(): string {
        return __S.getText(4, this);
    }
    setAgencyUuid(value: string): void {
        __S.setText(4, value, this);
    }
    getShortname(): string {
        return __S.getText(5, this);
    }
    setShortname(value: string): void {
        __S.setText(5, value, this);
    }
    getLongname(): string {
        return __S.getText(6, this);
    }
    setLongname(value: string): void {
        __S.setText(6, value, this);
    }
    getColor(): string {
        return __S.getText(7, this);
    }
    setColor(value: string): void {
        __S.setText(7, value, this);
    }
    getIsEnabled(): number {
        return __S.getInt8(0, this);
    }
    setIsEnabled(value: number): void {
        __S.setInt8(0, value, this);
    }
    getDescription(): string {
        return __S.getText(8, this);
    }
    setDescription(value: string): void {
        __S.setText(8, value, this);
    }
    getData(): string {
        return __S.getText(9, this);
    }
    setData(value: string): void {
        __S.setText(9, value, this);
    }
    getIsAutonomous(): number {
        return __S.getInt8(1, this);
    }
    setIsAutonomous(value: number): void {
        __S.setInt8(1, value, this);
    }
    getAllowSameLineTransfers(): number {
        return __S.getInt8(2, this);
    }
    setAllowSameLineTransfers(value: number): void {
        __S.setInt8(2, value, this);
    }
    getIsFrozen(): number {
        return __S.getInt8(3, this);
    }
    setIsFrozen(value: number): void {
        __S.setInt8(3, value, this);
    }
    toString(): string {
        return 'Line_' + super.toString();
    }
}
export class LineCollection extends __S {
    static readonly _capnp = { displayName: 'LineCollection', id: 'ad1e031b6a61573b', size: new __O(0, 1) };
    static _Lines: capnp.ListCtor<Line>;
    adoptLines(value: capnp.Orphan<capnp.List<Line>>): void {
        __S.adopt(value, __S.getPointer(0, this));
    }
    disownLines(): capnp.Orphan<capnp.List<Line>> {
        return __S.disown(this.getLines());
    }
    getLines(): capnp.List<Line> {
        return __S.getList(0, LineCollection._Lines, this);
    }
    hasLines(): boolean {
        return !__S.isNull(__S.getPointer(0, this));
    }
    initLines(length: number): capnp.List<Line> {
        return __S.initList(0, LineCollection._Lines, length, this);
    }
    setLines(value: capnp.List<Line>): void {
        __S.copyFrom(value, __S.getPointer(0, this));
    }
    toString(): string {
        return 'LineCollection_' + super.toString();
    }
}
LineCollection._Lines = capnp.CompositeList(Line);
