/* tslint:disable */

/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */

import * as capnp from 'capnp-ts';
import { ObjectSize as __O, Struct as __S } from 'capnp-ts';
export const _capnpFileId = '9f589c74b7072cc0';
export class Unit extends __S {
    static readonly _capnp = { displayName: 'Unit', id: 'bba1dcf4892ecc7d', size: new __O(24, 12) };
    getUuid(): string {
        return __S.getText(0, this);
    }
    setUuid(value: string): void {
        __S.setText(0, value, this);
    }
    getInternalId(): string {
        return __S.getText(1, this);
    }
    setInternalId(value: string): void {
        __S.setText(1, value, this);
    }
    getAgencyUuid(): string {
        return __S.getText(2, this);
    }
    setAgencyUuid(value: string): void {
        __S.setText(2, value, this);
    }
    getGarageUuid(): string {
        return __S.getText(3, this);
    }
    setGarageUuid(value: string): void {
        __S.setText(3, value, this);
    }
    getLineUuid(): string {
        return __S.getText(4, this);
    }
    setLineUuid(value: string): void {
        __S.setText(4, value, this);
    }
    getMode(): string {
        return __S.getText(5, this);
    }
    setMode(value: string): void {
        __S.setText(5, value, this);
    }
    getManufacturer(): string {
        return __S.getText(6, this);
    }
    setManufacturer(value: string): void {
        __S.setText(6, value, this);
    }
    getModel(): string {
        return __S.getText(7, this);
    }
    setModel(value: string): void {
        __S.setText(7, value, this);
    }
    getCapacitySeated(): number {
        return __S.getInt16(0, this);
    }
    setCapacitySeated(value: number): void {
        __S.setInt16(0, value, this);
    }
    getCapacityStanding(): number {
        return __S.getInt16(2, this);
    }
    setCapacityStanding(value: number): void {
        __S.setInt16(2, value, this);
    }
    getNumberOfVehicles(): number {
        return __S.getInt16(4, this);
    }
    setNumberOfVehicles(value: number): void {
        __S.setInt16(4, value, this);
    }
    getNumberOfDoors(): number {
        return __S.getInt16(6, this);
    }
    setNumberOfDoors(value: number): void {
        __S.setInt16(6, value, this);
    }
    getNumberOfDoorChannels(): number {
        return __S.getInt16(8, this);
    }
    setNumberOfDoorChannels(value: number): void {
        __S.setInt16(8, value, this);
    }
    getLicenseNumber(): string {
        return __S.getText(8, this);
    }
    setLicenseNumber(value: string): void {
        __S.setText(8, value, this);
    }
    getSerialNumber(): string {
        return __S.getText(9, this);
    }
    setSerialNumber(value: string): void {
        __S.setText(9, value, this);
    }
    getLengthMm(): number {
        return __S.getFloat32(12, this);
    }
    setLengthMm(value: number): void {
        __S.setFloat32(12, value, this);
    }
    getWidthMm(): number {
        return __S.getFloat32(16, this);
    }
    setWidthMm(value: number): void {
        __S.setFloat32(16, value, this);
    }
    getData(): string {
        return __S.getText(10, this);
    }
    setData(value: string): void {
        __S.setText(10, value, this);
    }
    getIsEnabled(): number {
        return __S.getInt8(10, this);
    }
    setIsEnabled(value: number): void {
        __S.setInt8(10, value, this);
    }
    getIsFrozen(): number {
        return __S.getInt8(11, this);
    }
    setIsFrozen(value: number): void {
        __S.setInt8(11, value, this);
    }
    getId(): number {
        return __S.getInt32(20, this);
    }
    setId(value: number): void {
        __S.setInt32(20, value, this);
    }
    getColor(): string {
        return __S.getText(11, this);
    }
    setColor(value: string): void {
        __S.setText(11, value, this);
    }
    toString(): string {
        return 'Unit_' + super.toString();
    }
}
export class UnitCollection extends __S {
    static readonly _capnp = { displayName: 'UnitCollection', id: 'b6192eb154ecb4d0', size: new __O(0, 1) };
    static _Units: capnp.ListCtor<Unit>;
    adoptUnits(value: capnp.Orphan<capnp.List<Unit>>): void {
        __S.adopt(value, __S.getPointer(0, this));
    }
    disownUnits(): capnp.Orphan<capnp.List<Unit>> {
        return __S.disown(this.getUnits());
    }
    getUnits(): capnp.List<Unit> {
        return __S.getList(0, UnitCollection._Units, this);
    }
    hasUnits(): boolean {
        return !__S.isNull(__S.getPointer(0, this));
    }
    initUnits(length: number): capnp.List<Unit> {
        return __S.initList(0, UnitCollection._Units, length, this);
    }
    setUnits(value: capnp.List<Unit>): void {
        __S.copyFrom(value, __S.getPointer(0, this));
    }
    toString(): string {
        return 'UnitCollection_' + super.toString();
    }
}
UnitCollection._Units = capnp.CompositeList(Unit);
