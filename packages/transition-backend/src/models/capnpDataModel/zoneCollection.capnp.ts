/* tslint:disable */

/**
 * This file has been automatically generated by the [capnpc-ts utility](https://github.com/jdiaz5513/capnp-ts).
 */

import * as capnp from 'capnp-ts';
import { ObjectSize as __O, Struct as __S } from 'capnp-ts';
import { Zone } from './zone.capnp';
export const _capnpFileId = '98989522a3c141fc';
export class ZoneCollection extends __S {
    static readonly _capnp = { displayName: 'ZoneCollection', id: 'd36f8abbbceeeb8a', size: new __O(0, 1) };
    static _Zones: capnp.ListCtor<Zone>;
    adoptZones(value: capnp.Orphan<capnp.List<Zone>>): void {
        __S.adopt(value, __S.getPointer(0, this));
    }
    disownZones(): capnp.Orphan<capnp.List<Zone>> {
        return __S.disown(this.getZones());
    }
    getZones(): capnp.List<Zone> {
        return __S.getList(0, ZoneCollection._Zones, this);
    }
    hasZones(): boolean {
        return !__S.isNull(__S.getPointer(0, this));
    }
    initZones(length: number): capnp.List<Zone> {
        return __S.initList(0, ZoneCollection._Zones, length, this);
    }
    setZones(value: capnp.List<Zone>): void {
        __S.copyFrom(value, __S.getPointer(0, this));
    }
    toString(): string {
        return 'ZoneCollection_' + super.toString();
    }
}
ZoneCollection._Zones = capnp.CompositeList(Zone);
